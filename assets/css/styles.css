/*
! tailwindcss v3.3.7 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

@media screen and (prefers-reduced-motion: no-preference) {
  html,
        body {
    scroll-behavior: smooth;
  }
}

body {
  --tw-text-opacity: 1;
  color: rgb(68 64 60 / var(--tw-text-opacity));
}

a,
    .separator {
  --tw-text-opacity: 1;
  color: rgb(87 83 78 / var(--tw-text-opacity));
}

h1:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

h2:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

h3:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 1.5rem;
  line-height: 2rem;
}

h4:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

h5:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

h6:not([class*="text-lg"]):not([class*="text-xs"]):not([class*="text-sm"]):not([class*="text-base"]):not([class*="text-xl"]) {
  font-size: 1rem;
  line-height: 1.5rem;
}

h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
  margin-bottom: 1rem;
}

.outline-0,
    .outline-0:focus {
  outline: none !important;
}

[x-cloak] {
  visibility: hidden;
  overflow: hidden;
}

body.keyboard-navigation a:focus {
  outline: 2px solid #adbce6;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 480px) {
  .container {
    max-width: 480px;
  }
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

/* -------------------------------------------------- *
    * Tailwind Grid
    * -------------------------------------------------- */

.wrapper {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.wrapper > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.wrapper {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(231 229 228 / var(--tw-border-opacity));
  padding: 1rem;
  /* is overflow-hidden needed? */
}

.row {
  display: flex;
  flex-wrap: wrap;
}

.container .row,
            .wrapper .row {
  margin-left: -1rem;
  margin-right: -1rem;
}

/* row styles */

.col {
  display: flex;
  width: 100%;
  flex-direction: column;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* col styles */

/* Content styles */

/* Goes into new div within .col */

.content-style--card {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
}

.content-style--card > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.content-style--card {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(231 229 228 / var(--tw-border-opacity));
  padding: 1rem;
}

/* Wrap photo in a div with this class to pull it to the edge on left, right, and top. */

/* Used to push buttons to the bottom to line up in a row. */

.content-style--split {
  display: flex;
  flex-direction: column;
}

.content-style--split > *:nth-last-child(2) {
  flex-grow: 1;
}

/* -------------------------------------------------- *
    * Styled Objects
    * -------------------------------------------------- */

/* -------------------------------------------------- *
    * Menu
    * -------------------------------------------------- */

/* ============ Hamburger button ============ */

.\!burger {
  position: absolute;
  left: 0px;
  display: block;
  height: 0.25rem;
  width: 100%;
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgb(68 64 60 / var(--tw-bg-opacity));
  opacity: 1;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.burger {
  position: absolute;
  left: 0px;
  display: block;
  height: 0.25rem;
  width: 100%;
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgb(68 64 60 / var(--tw-bg-opacity));
  opacity: 1;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.burger-1 {
  top: 0.25rem;
  left: 0px;
  width: 100%;
}

.a11ymenu.mobile--open .burger-1 {
  top: 1rem;
  left: 50%;
  width: 0px;
}

.burger-2 {
  top: 1rem;
}

.a11ymenu.mobile--open .burger-2 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.burger-3 {
  top: 1rem;
}

.a11ymenu.mobile--open .burger-3 {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.burger-4 {
  top: 1.75rem;
  left: 0px;
  width: 100%;
}

.a11ymenu.mobile--open .burger-4 {
  top: 1rem;
  left: 50%;
  width: 0px;
}

/* ============ Menu Functionality ============ */

.a11ymenu__menu,
        .a11ymenu__menu ul,
        .a11ymenu__menu li {
  position: relative;
  display: flex;
  list-style-type: none;
  flex-direction: column;
  border-width: 0px;
  padding: 0px;
}

.a11ymenu__menu .has-submenu {
  flex-direction: row;
}

/* Overflow: hidden stops the flash of submenus when loading */

.a11ymenu__menu {
  overflow: hidden;
}

.a11ymenu__menu:hover,
        .a11ymenu__menu:focus-within {
  overflow: visible;
}

/* Place link and button side-by-side */

.a11ymenu__menu .has-submenu {
  display: flex;
  flex-direction: row;
  flex-direction: row-reverse;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  /* Remove flex-row-reverse to place open/close icon on the right. */
}

.a11ymenu__menu .has-submenu>a,
        .a11ymenu__menu .has-submenu>.separator {
  padding-left: 0.25rem;
}

.a11ymenu__menu .has-submenu>.separator {
  cursor: pointer;
}

/* No reason to show outline when using a mouse */

body:not(.keyboard-navigation) .a11ymenu__menu a,
        body:not(.keyboard-navigation) .a11ymenu__menu .separator,
        body:not(.keyboard-navigation) .a11ymenu__menu button {
  outline: none;
}

/* All submenu containers. Must have visibility: hidden to tab across top bar with menus closed. */

.a11ymenu__menu .has-submenu ul {
  visibility: hidden;
  flex-basis: 100%;
}

.a11ymenu__menu a,
        .a11ymenu__menu .separator {
  display: flex;
  flex-grow: 1;
  flex-wrap: wrap;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: left;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(68 64 60 / var(--tw-text-opacity));
  text-decoration-line: none;
}

/* All buttons */

.a11ymenu__menu .has-submenu>button {
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}

/* All submenu items */

.a11ymenu__menu button[aria-expanded="true"]+ul {
  visibility: visible;
}

.a11ymenu__menu button[aria-expanded="false"]+ul {
  visibility: hidden;
}

/* ---------- Mobile Only ---------- */

@media (max-width: 767px) {
  .a11ymenu__menu {
    height: 0px;
    width: 100%;
  }

  .a11ymenu.mobile--closed .a11ymenu__menu,
            .a11ymenu__menu .has-submenu>button[aria-expanded="false"]+ul {
    overflow: hidden;
    max-height: 0;
  }

  .a11ymenu.mobile--open .a11ymenu__menu,
            .a11ymenu__menu .has-submenu>button[aria-expanded="open"]+ul {
    max-height: 2000px;
    height: auto;
  }
}

@media (min-width: 768px) {
  .a11ymenu__menu {
    flex-direction: row;
  }

  .a11ymenu__menu ul {
    position: absolute;
  }

  .a11ymenu__menu>li>a,
            .a11ymenu__menu>li>.separator {
    justify-content: center;
  }

  .a11ymenu__menu>li>a+ul,
            .a11ymenu__menu>li>.separator+ul,
            .a11ymenu__menu>li>a+button+ul,
            .a11ymenu__menu>li>.separator+button+ul {
    top: 100%;
  }

  .a11ymenu__menu ul a+ul,
            .a11ymenu__menu ul .separator+ul,
            .a11ymenu__menu ul a+button+ul,
            .a11ymenu__menu ul .separator+button+ul {
    left: 100%;
  }

  .a11ymenu__menu>li:last-child a+ul,
            .a11ymenu__menu>li:last-child .separator+ul,
            .a11ymenu__menu>li:last-child a+button+ul,
            .a11ymenu__menu>li:last-child .separator+button+ul {
    right: 0;
  }

  .a11ymenu__menu>li:last-child ul a+ul,
            .a11ymenu__menu>li:last-child ul .separator+ul,
            .a11ymenu__menu>li:last-child ul a+button+ul,
            .a11ymenu__menu>li:last-child ul .separator+button+ul {
    left: calc(-100% - 2px);
    width: 100%;
  }
}

/* ============ Menu Styles ============ */

.a11ymenu--subtext {
  display: flex;
  font-size: 0.875rem;
  line-height: 1.25rem;
  flex-basis: 100%;
}

/* Submenus */

.a11ymenu__menu ul {
  transform-origin: top;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-width: 1px;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgb(120 113 108 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(214 211 209 / var(--tw-bg-opacity));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-delay: 150ms;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  min-width: 12.5rem;
}

.a11ymenu__menu ul>li {
  border-top-width: 1px;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgb(120 113 108 / var(--tw-border-opacity));
}

.a11ymenu__menu ul>li:first-child {
  border-top-width: 0px;
}

.a11ymenu__menu ul>li:hover,
        .a11ymenu__menu ul>li:focus-within {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 244 / var(--tw-bg-opacity));
}

/* Open and close submenu with a click */

.a11ymenu__menu .has-submenu>button[aria-expanded="true"]+ul {
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.a11ymenu__menu .has-submenu>button[aria-expanded="false"]+ul {
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.a11ymenu__menu .has-submenu>button {
  margin: 0.25rem;
  border-radius: 0.25rem;
  border-width: 1px;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgb(168 162 158 / var(--tw-border-opacity));
}

/* Expand/collapse icon */

.a11ymenu__menu .has-submenu button>span {
  padding: 0.25rem;
}

.no-js .a11ymenu__menu .has-submenu::after {
  display: flex;
  height: 1.5rem;
  width: 1.5rem;
  align-items: center;
  justify-content: center;
}

/*.no-js .a11ymenu__menu .has-submenu .has-submenu {
            @apply relative flex w-full h-full flex-row justify-center items-center;
        }*/

.a11ymenu__menu .has-submenu button>span::before,
        .no-js .a11ymenu__menu .has-submenu::after {
  transform-origin: center;
  font-size: 1.25rem;
  line-height: 1.75rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  content: "+";
  line-height: .1;
  /* Use origin-top if using arrows */
}

.a11ymenu__menu li>button>span,
        .no-js .a11ymenu__menu .has-submenu::after {
  transform-origin: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.a11ymenu__menu li>button[aria-expanded="true"]>span,
        .no-js .a11ymenu__menu li:hover::after {
  transform: rotate(45deg) translate(0, 0%);
}

.a11ymenu__menu li>button[aria-expanded="false"]>span,
        .no-js .a11ymenu__menu li::after {
  transform: rotate(0deg) translate(0, 0%);
}

/* Create space for +/- where button is and adjust if javascript is turned off. */

.no-js .a11ymenu__menu .has-submenu:after {
  left: -1rem;
}

.no-js .a11ymenu__menu .has-submenu .has-submenu:after {
  left: 1rem;
}

/* Code for using an arrow instead of + / - */

/*
        .a11ymenu__menu .has-submenu button>span:after,
        .no-js .a11ymenu__menu .has-submenu:after {
            @apply absolute top-1/2 w-2 h-2 border-t border-l border-solid border-current origin-top transition duration-500 ease-out;
            content: "";
        }
        .a11ymenu__menu li>button[aria-expanded="true"]>span:after,
        .a11ymenu__menu li:hover>button>span:after,
        .no-js .a11ymenu__menu li:hover:after {
            transform: rotate(225deg) translate(0, -50%);
        }
        .a11ymenu__menu li>button[aria-expanded="false"]>span:after,
        .no-js .a11ymenu__menu li:after {
            transform: rotate(135deg) translate(22%, -35%);
            /* Use 135deg and -45deg for left facing arrow and use translate(0, -50%) for both. *
        }
        /* Create space for arrow where button is and adjust arrow if javascript is turned off. *
        .no-js .a11ymenu__menu .has-submenu {
            @apply mr-6;
        }
        .no-js .a11ymenu__menu .has-submenu:after {
            @apply -right-4;
        }
        .no-js .a11ymenu__menu .has-submenu .has-submenu:after {
            @apply right-4;
        }
        */

@media (max-width: 767px) {
  .a11ymenu__menu {
    margin-bottom: -1rem;
    margin-top: 1rem;
    border-width: 1px;
    border-bottom-width: 0px;
    --tw-border-opacity: 1;
    border-color: rgb(107 114 128 / var(--tw-border-opacity));
  }

  .a11ymenu__menu .has-submenu button {
    --tw-bg-opacity: 1;
    background-color: rgb(231 229 228 / var(--tw-bg-opacity));
  }

  /* Set up animations for container and buttons */

  .a11ymenu__menu,
            .a11ymenu__menu .has-submenu>button+ul {
    transform-origin: top;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }

  /* Main level */

  .a11ymenu__menu>li {
    border-width: 0px;
    border-bottom-width: 1px;
    border-style: solid;
    --tw-border-opacity: 1;
    border-color: rgb(120 113 108 / var(--tw-border-opacity));
  }

  /* Submenus */

  .a11ymenu__menu ul {
    border-width: 0px;
    border-top-width: 1px;
    border-style: solid;
    --tw-border-opacity: 1;
    border-color: rgb(120 113 108 / var(--tw-border-opacity));
  }

  .a11ymenu.mobile--closed .a11ymenu__menu {
    --tw-scale-y: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .a11ymenu.mobile--open .a11ymenu__menu {
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  /* Add prefix symbols to submenus to show level. Add more if menu is deeper than 2 levels. */

  .a11ymenu.mobile--closed .a11ymenu__menu,
            .a11ymenu__menu .has-submenu>button[aria-expanded="false"]+ul {
  }

  .a11ymenu__menu ul>li>a::before,
            .a11ymenu__menu ul>li>span::before {
    margin-right: 0.5rem;
    display: inline-block;
    content: "- ";
  }

  .a11ymenu__menu ul ul>li>a::before,
            .a11ymenu__menu ul ul>li>span::before {
    margin-right: 0.5rem;
    display: inline-block;
    content: "- - ";
  }
}

@media (min-width: 768px) {
  .a11ymenu--subtext {
    justify-content: center;
  }

  .a11ymenu__menu>li>a,
            .a11ymenu__menu>li>.separator {
    justify-content: center;
    text-align: center;
  }

  /* Hover underline on top level */

  .a11ymenu__menu>li:hover:before,
            .a11ymenu__menu>li:focus-within:before {
    position: absolute;
    bottom: 0px;
    height: 0.125rem;
    width: 100%;
    --tw-bg-opacity: 1;
    background-color: rgb(156 163 175 / var(--tw-bg-opacity));
    content: "";
  }

  .a11ymenu__menu .has-submenu>button,
            .no-js .a11ymenu__menu .has-submenu::before {
    --tw-border-opacity: 1;
    border-color: rgb(214 211 209 / var(--tw-border-opacity));
    /* Add h-1/2 if using arrows */
  }
}

/* Add support for hover to work if js is turned off */

.no-js .a11ymenu__menu li:hover>ul {
  visibility: visible;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

/* Uncomment to use hover instead of click */

/*
        .a11ymenu__menu li:hover>ul {
            @apply transform scale-y-100;
        }
        .a11ymenu__menu .has-submenu:hover>ul,
        .a11ymenu__menu .has-submenu:hover>button+ul {
            @apply visible;
        }
        .a11ymenu__menu .has-submenu:hover>button[aria-expanded="false"]+ul {
            @apply transform scale-y-100;
        }
        .a11ymenu__menu li:hover>button[aria-expanded="false"]>span {
            transform: rotate(45deg) translate(0, 0%);
        }
        */

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.left-4 {
  left: 1rem;
}

.m-0 {
  margin: 0px;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.-mt-4 {
  margin-top: -1rem;
}

.mb-0 {
  margin-bottom: 0px;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-auto {
  margin-left: auto;
}

.mr-3 {
  margin-right: 0.75rem;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-9 {
  height: 2.25rem;
}

.h-full {
  height: 100%;
}

.w-10 {
  width: 2.5rem;
}

.w-auto {
  width: auto;
}

.origin-center {
  transform-origin: center;
}

.-translate-y-full {
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-75 {
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-md {
  border-radius: 0.375rem;
}

.border {
  border-width: 1px;
}

.bg-stone-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 244 / var(--tw-bg-opacity));
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-0 {
  padding-bottom: 0px;
}

.pt-5 {
  padding-top: 1.25rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-0 {
  outline-width: 0px;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

/**
     * space-y-4 and other specific breakpoints specers are no more required.
     * If you need vertical spacers for screens under a breakpoint, you
     * can use max-[breakpoint]:space-y-4.
     * For mobiles it can be class="max-md:space-y-4"
     */

#debug-box {
  --debug-breakpoint: "xs (<640px)";
}

@media (min-width: 640px) {
  #debug-box {
    --debug-breakpoint: "sm (640px)"
  }
}

@media (min-width: 768px) {
  #debug-box {
    --debug-breakpoint: "md (768px)"
  }
}

@media (min-width: 1024px) {
  #debug-box {
    --debug-breakpoint: "lg (1024px)"
  }
}

@media (min-width: 1280px) {
  #debug-box {
    --debug-breakpoint: "xl (1280px)"
  }
}

@media (min-width: 1536px) {
  #debug-box {
    --debug-breakpoint: "2xl (1536px)"
  }
}

#debug-box {
  content: var(--debug-current-size);
  background: rgb(231, 231, 231);
  border: solid 1px rgb(112, 112, 112);
  font-size: 12px;
  padding: .2em;
  position: fixed;
  bottom: 0;
  right: 0;
  z-index: 9999999;
}

#debug-box::before {
  content: var(--debug-breakpoint);
  background: rgb(231, 231, 231);
  border: solid 1px rgb(112, 112, 112);
  font-size: 12px;
  padding: .2em;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 9999999;
}

.focus-within\:mt-2:focus-within {
  margin-top: 0.5rem;
}

.focus-within\:translate-y-0:focus-within {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:text-gray-600:hover {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.focus\:mt-2:focus {
  margin-top: 0.5rem;
}

.focus\:translate-y-0:focus {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media not all and (min-width: 768px) {
  .max-md\:space-y-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  }
}

@media (min-width: 480px) {
  .xs\:justify-start {
    justify-content: flex-start;
  }

  .xs\:justify-end {
    justify-content: flex-end;
  }
}

@media (min-width: 768px) {
  .md\:hidden {
    display: none;
  }

  .md\:w-1\/2 {
    width: 50%;
  }

  .md\:w-1\/3 {
    width: 33.333333%;
  }
}